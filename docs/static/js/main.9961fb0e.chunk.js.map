{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","renderList","getState","_","uniq","forEach","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"+QAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yCCOAC,EAAa,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACLC,EAAgBC,IAAI,UADf,OACtBC,EADsB,OAG5BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHtB,2CAAN,uDAMbC,EAAY,SAAAC,GAAE,8CAAI,WAAMT,GAAN,eAAAC,EAAA,sEACJC,EAAgBC,IAAhB,iBAA8BM,IAD1B,OACrBL,EADqB,OAG3BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHtB,2CAAJ,uDCbrBG,E,uKACQ,IACEC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAIE,yBAAKG,UAAU,UAAUH,EAAKI,MAH1B,S,GALMC,IAAMC,WAgBhBC,eAJS,SAACC,EAAOC,GAC5B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,EAASG,aAGlDL,CAAyBR,GCdlCc,E,kLAEEZ,KAAKC,MAAMY,uB,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAAAC,GACxB,OACI,yBAAKd,UAAU,OAAOe,IAAKD,EAAKnB,IAC5B,uBAAGK,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKc,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYR,OAAQK,EAAKL,gB,+BAQzC,OAAO,yBAAKT,UAAU,2BAA2BF,KAAKoB,kB,GAvBvChB,IAAMC,WA+BdC,eAJS,SAAAC,GACpB,MAAO,CAAEO,MAAOP,EAAMO,SAKtB,CAAED,mBFnC4B,yDAAM,WAAOzB,EAAUiC,GAAjB,SAAAhC,EAAA,sEAC9BD,EAASD,KADqB,OAGpBmC,IAAEC,KAAKD,IAAEP,IAAIM,IAAWP,MAAO,WACvCU,SAAQ,SAAA3B,GAAE,OAAIT,EAASQ,EAAUC,OAJL,2CAAN,0DEiCnBS,CAGbM,GC5Baa,EARH,WACR,OACI,yBAAKvB,UAAU,gBACX,kBAAC,EAAD,Q,QCFGwB,cAAgB,CAC3BZ,MCLW,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIoB,EAAW,uCACnC,OAAQA,EAAOlC,MACX,IAAK,cACD,OAAOkC,EAAOjC,QAClB,QACI,OAAOa,IDCfE,MENW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIoB,EAAW,uCACnC,OAAQA,EAAOlC,MACX,IAAK,aACD,MAAM,GAAN,mBAAWc,GAAX,CAAkBoB,EAAOjC,UAC7B,QACI,OAAOa,MCIbqB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,cAAc,Y","file":"static/js/main.9961fb0e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com\"\r\n});","import _ from \"lodash\";\r\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n    await dispatch(fetchPosts());\r\n    \r\n    const userIds = _.uniq(_.map(getState().posts, \"userId\"));\r\n    userIds.forEach(id => dispatch(fetchUser(id)));\r\n};\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n    const response = await jsonPlaceholder.get(\"/posts\");\r\n    \r\n    dispatch({ type: \"FETCH_POSTS\", payload: response.data })\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n    dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n};\r\n\r\n// export const fetchUser = id => dispatch => {\r\n//     _fetchUser(id, dispatch);\r\n// };\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n//     dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n// });","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserHeader extends React.Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        \r\n        if (!user) {\r\n            return null;\r\n        }\r\n\r\n        return <div className=\"header\">{user.name}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPostsAndUsers } from \"../actions\";\r\nimport UserHeader from \"./UserHeader\";\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPostsAndUsers();\r\n    }\r\n    \r\n    renderList() {\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className=\"large middle aligned icon user\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { posts: state.posts };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchPostsAndUsers }\r\n)(PostList);","import React from \"react\";\r\nimport PostList from \"./PostList\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <PostList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport postsReducer from \"./postsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n});","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_POSTS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_USER\":\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}